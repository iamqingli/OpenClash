# ========================
# Clash Smart策略 性能优化配置
# ========================

# ========================
# 请使用Smart内核,否则无法运行
# ========================

# ========================
# 锚点定义
# ========================
Proxy_first: &Proxy_first
  type: select
  proxies:
    - 所有-智选
    - 所有-手动
    - 香港-故转
    - 日本-故转
    - 美国-故转
    - 台湾-故转
    - 新加坡-故转
    - 其他-故转
    - 🟢 直连

Direct_first: &Direct_first
  type: select
  proxies:
    - 🟢 直连
    - 所有-智选
    - 所有-手动
    - 香港-故转
    - 日本-故转
    - 美国-故转
    - 台湾-故转
    - 新加坡-故转
    - 其他-故转

PProviders: &PProviders
  type: http
  interval: 86400
  health-check:
    enable: true
    url: https://www.gstatic.com/generate_204
    interval: 300
  proxy: 🟢 直连
  
# ========================
# 节点订阅链接
# ========================
# 订阅地址1/2/3名称不能重复,可自定义修改,订阅链接1/2/3填写订阅链接 
# 未使用的无效订阅可删除

proxy-providers:
  订阅地址1:
    <<: *PProviders
    proxy: "🟢 直连"
    url: "订阅链接1"
    override:
      skip-cert-verify: true
      udp: true
      ipv6: false     # 上游节点优先用 IPv4
  
  订阅地址2:
    <<: *PProviders
    proxy: "🟢 直连"
    url: "订阅链接2"
    override:
      skip-cert-verify: true
      udp: true
      ipv6: false     # 上游节点优先用 IPv4
  
  订阅地址3:
    <<: *PProviders
    proxy: "🟢 直连"
    url: "订阅链接3"
    override:
      skip-cert-verify: true
      udp: true
      ipv6: false     # 上游节点优先用 IPv4

# 基础代理
proxies:
  - {name: 🟢 直连, type: direct}

# ========================
# 端口与控制面板
# ========================
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
mode: rule
log-level: warning
unified-delay: true
tcp-concurrent: true
skip-auth-prefixes:
  - 127.0.0.1/8
  - ::1/128

# 控制面板
# 跑裸核用户请自行去掉下方控制面板模块的注释。
external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-name: zashboard
# external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"
secret: "123456"

# 匹配进程
find-process-mode: 'off'
global-client-fingerprint: chrome
keep-alive-idle: 600
keep-alive-interval: 15

# 策略组选择和fakeip缓存
profile:
  store-selected: true
  store-fake-ip: true

# ========================
# 流量嗅探
# ========================
sniffer:
  enable: false
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - "+.v2ex.com"
  skip-domain:
    - "+.baidu.com"

# ========================
# DNS 设置
# ========================
dns:
  enable: true
  listen: 0.0.0.0:1053
  respect-rules: true
  ipv6: true
  # 模式切换 redir-host / fake-ip
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  # 模式切换 whitelist/blacklist,黑名单模式表示如果匹配成功则不返回 Fake-IP, 白名单模式时只有匹配成功才返回 Fake-IP
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
  # 规则集：应用 / 媒体 / 国内域 / 私有域等
    - "rule-set:pt_cn_domain,public-tracker_domain,Apple / Domain,Apple-CN / Domain,China / Domain,Private / Domain" 
  # 系统级、局域网、时间同步、联网检测
    - "*.lan"
    - "*.localdomain"
    - "*.example"
    - "*.invalid"
    - "*.localhost"
    - "*.test"
    - "*.local"
    - "*.home.arpa"
    - "*.direct"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
    - "+.market.xiaomi.com"
  default-nameserver:
    - 223.5.5.5
  proxy-server-nameserver:
    - 119.29.29.29
  # namesever尽量用运营商提供的DNS
  nameserver:
    - 223.5.5.5
    - 119.29.29.29

# ========================
# 入站代理模式
# ========================
tun:
  enable: true
  # system/gvisor/mixed
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  #使用nikki，混入全部不修改的情况，开启接口指定为nikki
  #使用仅内核自行修改下面三项为true
  #device: nikki
  auto-route: false
  auto-redirect: false
  auto-detect-interface: false
  
# ========================
# 策略组定义
# ========================
proxy-groups:
  - {name: AI平台, <<: *Proxy_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Chatgpt_A.png"}
  - {name: GitHub, <<: *Proxy_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Github_A.png"}
  - {name: Amazon, <<: *Direct_first, icon: "https://cdn.pixabay.com/photo/2013/07/12/15/51/shopping-150458_1280.png"}
  - {name: Telegram, <<: *Proxy_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Telegram_A.png"}
  - {name: 流媒体, <<: *Proxy_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Disney%2B_A.png"}
  - {name: TikTok, <<: *Proxy_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Tiktok_A.png"}
  - {name: Netflix, <<: *Proxy_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Netflix_A.png"}
  - {name: YouTube, <<: *Proxy_first, icon: "https://cdn.pixabay.com/photo/2018/05/27/22/48/social-3434840_1280.png"}
  - {name: Steam, <<: *Direct_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Steam_A.png"}
  - {name: 游戏平台, <<: *Direct_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Epicgames_A.png"}
  - {name: Google, <<: *Proxy_first, icon: "https://cdn.pixabay.com/photo/2016/04/13/14/27/google-chrome-1326908_1280.png"}
  - {name: Microsoft, <<: *Proxy_first, icon: "https://cdn.pixabay.com/photo/2021/10/17/14/47/windows-7-logo-6718525_1280.png"}
  - {name: Apple, <<: *Direct_first, icon: "https://cdn.pixabay.com/photo/2016/09/27/19/54/apple-1699197_1280.png"}
  - {name: 国外应用, <<: *Proxy_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Discord_A.png"}
  - {name: 测试服务, <<: *Proxy_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Speedtest_A.png"}
  - {name: 加密货币, <<: *Proxy_first, icon: "https://cdn.pixabay.com/photo/2017/03/12/02/57/bitcoin-2136339_1280.png"}
  - {name: 国内, <<: *Direct_first, icon: "https://cdn.pixabay.com/photo/2015/04/22/23/18/pagoda-735491_960_720.png"}
  - {name: 国外, <<: *Proxy_first, icon: "https://raw.githubusercontent.com/xushier/HD-Icons/refs/heads/main/border-radius/Shadowrocket_A.png"}
  - {name: 漏网之鱼, <<: *Direct_first, icon: "https://cdn.pixabay.com/photo/2017/02/16/10/20/target-2070972_1280.png"}
  
# ========================
# 节点选择组
# ========================

  - name: 所有-手动
    type: select
    include-all: true
    filter: "^((?!(🟢 直连)).)*$"
    icon: "https://pub-8feead0908f649a8b94397f152fb9cba.r2.dev/direct.png"

  - name: 所有-智选
    type: smart
    include-all: true
    policy-priority: ".*机场.*:0.8;.*(美国|US).*:1.2;.*(日本|JP).*:1.5"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "^((?!(🟢 直连)).)*$"
    icon: "https://pub-8feead0908f649a8b94397f152fb9cba.r2.dev/final.png"

  # 香港组
  - name: 香港-故转
    type: fallback
    interval: 300
    lazy: true
    proxies:
      - 香港-手动
      - 香港-智选
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png"
  - name: 香港-手动
    type: select
    include-all: true
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"  
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png"
  - name: 香港-智选
    type: smart
    include-all: true
    policy-priority: ".*机场.*:0.2"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广港|香港|HK|Hong Kong|🇭🇰|HongKong)).*$"
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Hong_Kong.png"
    
  # 日本组
  - name: 日本-故转
    type: fallback
    interval: 300
    lazy: true
    proxies:
      - 日本-手动
      - 日本-智选
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Japan.png"
  - name: 日本-手动
    type: select
    include-all: true
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Japan.png"
  - name: 日本-智选
    type: smart
    include-all: true
    policy-priority: ".*机场.*:0.2"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan)).*$"
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Japan.png"

  # 台湾组
  - name: 台湾-故转
    type: fallback
    interval: 300
    lazy: true
    proxies:
      - 台湾-手动
      - 台湾-智选
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Taiwan.png"
  - name: 台湾-手动
    type: select
    include-all: true
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|TaiWan|Taiwan)).*$"
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Taiwan.png"
  - name: 台湾-智选
    type: smart
    include-all: true
    policy-priority: ".*机场.*:0.2"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广台|台湾|台灣|TW|Tai Wan|🇹🇼|TaiWan|Taiwan)).*$"
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Taiwan.png"

  # 美国组
  - name: 美国-故转
    type: fallback
    interval: 300
    lazy: true
    proxies:
      - 美国-手动
      - 美国-智选
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/United_States.png"
  - name: 美国-手动
    type: select
    include-all: true
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).*$"
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/United_States.png"
  - name: 美国-智选
    type: smart
    include-all: true
    policy-priority: ".*机场.*:0.2"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸|United States)).*$"
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/United_States.png"

  # 新加坡组
  - name: 新加坡-故转
    type: fallback
    interval: 300
    lazy: true
    proxies:
      - 新加坡-手动
      - 新加坡-智选
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Singapore.png"
  - name: 新加坡-手动
    type: select
    include-all: true
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)).*$"
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Singapore.png"
  - name: 新加坡-智选
    type: smart
    include-all: true
    policy-priority: ".*机场.*:0.2"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "(?=.*(广新|新加坡|SG|坡|狮城|🇸🇬|Singapore)).*$"
    icon: "https://cdn.jsdmirror.com/gh/Koolson/Qure@master/IconSet/Color/Singapore.png"

  # 其他组
  - name: 其他-故转
    type: fallback
    interval: 300
    lazy: true
    proxies:
      - 其他-手动
      - 其他-智选
    icon: "https://cdn.pixabay.com/photo/2013/07/12/18/35/world-153534_1280.png"
  - name: 其他-手动
    type: select
    include-all: true
    filter: "^((?!(🟢 直连|广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸)).)*$"
    icon: "https://cdn.pixabay.com/photo/2013/07/12/18/35/world-153534_1280.png"
  - name: 其他-智选
    type: smart
    include-all: true
    policy-priority: ".*机场.*:0.2"
    uselightgbm: true
    collectdata: true
    interval: 300
    filter: "^((?!(🟢 直连|广港|香港|HK|Hong Kong|🇭🇰|HongKong|广台|台湾|台灣|TW|Tai Wan|🇹🇼|TaiWan|Taiwan|广日|日本|JP|川日|东京|大阪|泉日|埼玉|沪日|深日|🇯🇵|Japan|广新|新加坡|SG|坡|狮城|🇸🇬|Singapore|广美|美|US|纽约|波特兰|达拉斯|俄勒|凤凰城|费利蒙|拉斯|洛杉|圣何塞|圣克拉|西雅|芝加|🇺🇸)).)*$"
    icon: "https://cdn.pixabay.com/photo/2013/07/12/18/35/world-153534_1280.png"

# ========================
# 规则引擎（rules）
# ========================
rules:
  # 优先级高的规则
  - RULE-SET,Test / Domain,测试服务
  - RULE-SET,Block / Domain,拒绝
  - RULE-SET,Private / ip,国内,no-resolve
  - RULE-SET,Private / Domain,国内
  - RULE-SET,pt_cn_domain,国内
  - RULE-SET,public-tracker_domain,国内
  
  # 应用和服务规则
  - RULE-SET,AI / Domain,AI平台
  - RULE-SET,Github / Domain,GitHub
  - RULE-SET,Telegram / Domain,Telegram
  - RULE-SET,Telegram / IP,Telegram,no-resolve
  - RULE-SET,Twitter / Domain,国外应用
  - RULE-SET,WhatsApp / Domain,国外应用
  - RULE-SET,Facebook / Domain,国外应用
  - RULE-SET,Talkatone / Domain,国外应用
  
  # 流媒体规则
  - RULE-SET,Youtube / Domain,YouTube
  - RULE-SET,TikTok / Domain,TikTok
  - RULE-SET,Netflix / Domain,Netflix
  - RULE-SET,Netflix / IP,Netflix,no-resolve
  - RULE-SET,Disney / Domain,流媒体
  - RULE-SET,HBO / Domain,流媒体
  - RULE-SET,Spotify / Domain,流媒体
  
  # 游戏规则
  - RULE-SET,Xbox / Domain,Microsoft
  - RULE-SET,Steam / Domain,Steam
  - RULE-SET,steam_cn_domain,Steam
  - RULE-SET,steamcdn_domain,Steam
  - RULE-SET,steamcdn_ip,Steam,no-resolve
  - RULE-SET,Epic / Domain,游戏平台
  - RULE-SET,EA / Domain,游戏平台
  - RULE-SET,Blizzard / Domain,游戏平台
  - RULE-SET,UBI / Domain,游戏平台
  - RULE-SET,Sony / Domain,游戏平台
  - RULE-SET,Nintend / Domain,游戏平台
  
  # 公司和服务规则
  - RULE-SET,Amazon / Domain,Amazon
  - RULE-SET,Apple / Domain,Apple
  - RULE-SET,Apple / IP,Apple,no-resolve
  - RULE-SET,Apple-CN / Domain,国内
  - RULE-SET,onedrive_domain,国内
  - RULE-SET,Microsoft / Domain,Microsoft
  - RULE-SET,Google / Domain,Google
  - RULE-SET,Google / IP,Google,no-resolve
  
  # 加密货币规则
  - RULE-SET,OKX / Domain,加密货币
  - RULE-SET,Bybit / Domain,加密货币
  - RULE-SET,Binance / Domain,加密货币
  - RULE-SET,Other / Domain,加密货币
  
  # 国内外分流规则
  - RULE-SET,Direct / Domain,国内
  - RULE-SET,China / Domain,国内
  - RULE-SET,China / IP,国内
  - RULE-SET,Proxy / Domain,国外
  - RULE-SET,geolocation-!cn / Domain,国外
  
  # 兜底规则
  - MATCH,漏网之鱼

# ========================
# 规则集提供者
# ========================
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}

rule-providers:
  # 优先匹配规则
  Test / Domain: {<<: *class, url: "https://raw.githubusercontent.com/iamqingli/OpenClash/refs/heads/main/list/Test.list"}
  Private / ip: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  Private / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}  
  Proxy / Domain: {<<: *class, url: "https://raw.githubusercontent.com/iamqingli/OpenClash/refs/heads/main/list/Proxy.list"}
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs" }
  steam_cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/steam%40cn.mrs" }
  steamcdn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/Domain/Steam-domain.mrs" }
  steamcdn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/IP/steamCDN-ip.mrs" }
  pt_cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/category-pt.mrs" }
  public-tracker_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/category-public-tracker.mrs" }

  # 应用和服务规则
  AI / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs"}
  Talkatone / Domain: {<<: *class, url: "https://raw.githubusercontent.com/iamqingli/OpenClash/refs/heads/main/list/Talkatone.list"}
  Github / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  Telegram / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  Telegram / IP: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  Twitter / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/x.mrs"}
  WhatsApp / Domain: {<<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/refs/heads/master/rule/Clash/Whatsapp/Whatsapp.list"}
  Facebook / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/facebook.mrs"}
  Block / Domain: {<<: *class, url: "https://raw.githubusercontent.com/iamqingli/OpenClash/refs/heads/main/list/Block.list"}
  
  # 公司和服务规则
  Amazon / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/amazon.mrs"}
  Apple-CN / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  Apple / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"} 
  Apple / IP: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geoip/apple.mrs"}
  Microsoft / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  Google / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  Google / IP: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  
  # 加密货币规则
  OKX / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/okx.mrs"}
  Bybit / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bybit.mrs"}
  Binance / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/binance.mrs"}
  Other / Domain: {<<: *class, url: "https://raw.githubusercontent.com/iamqingli/OpenClash/refs/heads/main/list/Other.list"}
  
  # 流媒体规则
  Youtube / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  TikTok / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  Netflix / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  Netflix / IP: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  Disney / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/disney.mrs"}
  HBO / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/hbo.mrs"}
  Spotify / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"}
  
  # 游戏规则
  Steam / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam.mrs"}
  Epic / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/epicgames.mrs"}
  EA / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ea.mrs"}
  Blizzard / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/blizzard.mrs"}
  UBI / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ubisoft.mrs"}
  Sony / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/sony.mrs"}
  Nintend / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/nintendo.mrs"}
  Xbox / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/xbox.mrs"}
  
  # 国内外分流规则
  Direct / Domain: {<<: *class, url: "https://raw.githubusercontent.com/iamqingli/OpenClash/refs/heads/main/list/Direct.list"}
  China / Domain: {<<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  China / IP: {<<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  geolocation-!cn / Domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
